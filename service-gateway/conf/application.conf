
## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.crypto.secret = "QCY?tAnfk?aZ?iwrNwnxIlR6CTf:G3gf:90Latabg@5241AB`R5W:1uDFN];Ik@n"




## Database Connection Pool
# https://www.playframework.com/documentation/latest/SettingsJDBC
# ~~~~~
# Play doesn't require a JDBC database to run, but you can easily enable one.
#
# libraryDependencies += jdbc

fixedConnectionPool = 5
play.db {
    # The combination of these two settings results in "db.default" as the
    # default JDBC pool:
    config = "db"
    default = "default"
    
    # Play uses HikariCP as the default connection pool.  You can override
    # settings by changing the prototype:
    prototype {
        # Sets a fixed JDBC connection pool size of 50
        hikaricp.minimumIdle = ${fixedConnectionPool}
        hikaricp.maximumPoolSize = ${fixedConnectionPool}
    }
}

## JDBC Datasource
# https://www.playframework.com/documentation/latest/JavaDatabase
# https://www.playframework.com/documentation/latest/ScalaDatabase
# ~~~~~
# Once JDBC datasource is set up, you can work with several different
# database options:
#
# Slick (Scala preferred option): https://www.playframework.com/documentation/latest/PlaySlick
# JPA (Java preferred option): https://playframework.com/documentation/latest/JavaJPA
# EBean: https://playframework.com/documentation/latest/JavaEbean
# Anorm: https://www.playframework.com/documentation/latest/ScalaAnorm
#
jpa.default=defaultPersistenceUnit
db.default.driver=org.h2.Driver


db.default.url="jdbc:h2:mem:test_project"


db.default.migration.placeholderPrefix="$flyway{{{"
db.default.migration.placeholderSuffix="}}}"

db.default.jndiName=DefaultDS
db.default.logStatements=false
db.default.migration.auto=true



play {
    
    modules {
        
        enabled = ${play.modules.enabled} ["com.encentral.test_project.binder.Module", "play.modules.swagger.SwaggerModule","org.flywaydb.play.PlayModule"]
        
    }
    
}

api.version="0.1"
swagger.api.info.title="Test Project"
swagger.api.info.termsOfServiceUrl="http://encentralsolutions.com"
swagger.api.info.contact="james.akinniranye@encentralsolutions.com"
swagger.api.info.license="Licence Data. Coming Soon.."
swagger.api.info.description=" For more information on error codes click <strong><a href='/api-server/error'>here</a></strong> "

play.filters.enabled=[]
play.http.filters = "filters.Filters"
play.filters.enabled += "play.filters.hosts.AllowedHostsFilter"
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
    allowedOrigins = null
    allowedHttpMethods = null
    # allow all headers
    allowedHttpHeaders = null
    # allow all paths
    pathPrefixes = ["/"]
}

play.filters.hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    #allowed = [".showcase.com.ng", "localhost:9000"]
    #allowed = ["localhost"]
}

play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters.gzip {
    
    contentType {
        
        # If non empty, then a response will only be compressed if its content type is in this list.
        whiteList = [ "text/*", "application/javascript", "application/json" ]
        
        # The black list is only used if the white list is empty.
        # Compress all responses except the ones whose content type is in this list.
        blackList = []
    }
}

play.http.parser.maxDiskBuffer=50MB
play.http.parser.maxMemoryBuffer=25MB

